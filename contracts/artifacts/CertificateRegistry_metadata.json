{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "subject",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "data",
						"type": "string"
					}
				],
				"name": "CertificateIssued",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "CertificateRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "CertificateRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "subject",
						"type": "address"
					}
				],
				"name": "getCertificatesBySubject",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "uuid",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "subject",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "data",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "issueTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationTime",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revoked",
								"type": "bool"
							}
						],
						"internalType": "struct CertificateRegistry.Certificate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "subject",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "data",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					}
				],
				"name": "issueCertificate",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "removeCertificate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "revokeCertificate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "verifyCertificate",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "uuid",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "subject",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "data",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "issueTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expirationTime",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revoked",
								"type": "bool"
							}
						],
						"internalType": "struct CertificateRegistry.Certificate",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Verify.sol": "CertificateRegistry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
			"license": "MIT",
			"urls": [
				"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
				"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
			]
		},
		"contracts/Verify.sol": {
			"keccak256": "0x647270d6f379fc67560df69566f893bf458d9496f9fcc54b4c780bcf09255422",
			"license": "MIT",
			"urls": [
				"bzz-raw://c7f1fcb54ff7ef675f2e4bbe4936b9e7703ae61b1b32d23d58932390ae710c8a",
				"dweb:/ipfs/QmaHTzJpfLvor5DAFDzonrZ5vqfJXHoBBzjxvPZiuZyPA5"
			]
		}
	},
	"version": 1
}